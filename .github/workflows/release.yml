name: Releases
on:
  push:
    branches:
      - main

jobs:
  changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.7.1
        with:
          github-token: ${{ secrets.CHANGELOG_RELEASE }}

      # - name: Increment Version
      #   id: increment_version
      #   run: |
      #     # Example: Increment patch version
      #     # Parse existing version
      #     current_version=$(cat version.txt)
      #     # Increment patch version
      #     incremented_version=$(echo $current_version | awk -F. '{$NF++; print}' OFS=.)
      #     echo "::set-output name=tag_name::$incremented_version"

      - name: create release

        id: create_release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGELOG_RELEASE }}
        with:
          tag_name: ${{ steps.increment_version.outputs.tag_name }}
          release_name: ${{ steps.increment_version.outputs.tag_name }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

      - name: Set Latest Release
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          # Use GitHub API to set the latest release
          curl -X PATCH \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/amitsinghsutara/github-release-note-repo/releases/${{ steps.create_release.outputs.id }} \

            -d '{"Releases": "${{ steps.changelog.outputs.tag }}", "target_commitish": "main", "name": "${{ steps.changelog.outputs.tag }}", "draft": false, "prerelease": false}'
